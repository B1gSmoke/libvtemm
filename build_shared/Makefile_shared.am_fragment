## Copyright (c) 2009
## The libvtemm development team.
## needs defined:
##  files_extra_h
##  files_extra_cc
## returns:
##  many variables
##  but only
##  generated_sources_cc is used

include $(srcdir)/g/Makefile_list_of_hg.am_fragment
# defined:
#  files_hg

include $(srcdir)/g/Makefile_defs.am_fragment
# defined:
#  files_defs

files_defs_from_g = $(patsubst %,$(srcdir)/g/%,$(files_defs))

include $(srcdir)/../Makefile_sublib.am_fragment
# defined:
#  sublib_name
#  sublib_libversion
#  sublib_namespace
#  sublib_cflags
#  sublib_libname
#  sublib_parentdir

generated_sources_h = $(files_hg:.hg=.h)
generated_sources_cc = $(files_hg:.hg=.cc) wrap_init.cc
generated_private_headers = $(patsubst %.hg,$(srcdir)/private/%_p.h,$(files_hg))

tools_dir = $(top_srcdir)/tools
tools_dir_m4 = $(tools_dir)/m4

# this is not included. I don't know why...
#include $(tools_dir)/Makefile_list_of_sources.am_fragment
include $(top_srcdir)/tools/Makefile_list_of_sources.am_fragment
# defined:
#  files_tools_m4

tools_m4 = $(files_tools_m4:%.m4=$(tools_dir_m4)/%.m4)
gmmproc_path = $(GMM_PROC)
gmmproc_dir = $(GMM_PROCDIR)
gmmproc_args = -I $(tools_dir_m4) --defs $(srcdir)/g
run_gmmproc = $(gmmproc_path) $(gmmproc_args)
gen_wrap_init_path = $(gmmproc_dir)/generate_wrap_init.pl
gen_wrap_init_args = --namespace=Gnome --namespace=$(sublib_namespace) --parent_dir=$(sublib_parentdir)
run_gen_wrap_init  = $(gen_wrap_init_path) $(gen_wrap_init_args)
files_hg_with_path = $(patsubst %.hg,$(srcdir)/g/%.hg,$(files_hg))

# # # #
# commented for now, because hack needs to be used
BUILT_SOURCES = $(generated_sources_h) $(generated_sources_cc) $(generated_private_headers)

$(srcdir)/private/%_p.h: %.h

%.cc: %.h

%.h: $(srcdir)/g/%.hg $(srcdir)/g/%.ccg $(tools_m4) $(files_defs_from_g)
	$(run_gmmproc) $(notdir $*) $(srcdir)/g $(srcdir)
# end of "commented for now"
# # # #

$(srcdir)/wrap_init.cc: $(gen_wrap_init_path) $(files_hg_with_path)
	$(run_gen_wrap_init) $(files_hg_with_path) >$@

if PLATFORM_WIN32
no_undefined = -no-undefined
else
no_undefined =
endif

common_ldflags = -version-info $(sublib_libversion) $(no_undefined)

all_includes = -I$(top_builddir)/src -I$(top_srcdir)/src $(sublib_cflags)

EXTRA_DIST = $(generated_sources_cc) $(files_extra_cc) $(generated_sources_h) $(files_extra_h)
# DISTFILES = $(DIST_COMMON) $(dist_sources) $(TEXINFOS) $(EXTRA_DIST)

DEFS = @DEFS@ -DG_LOG_DOMAIN=\"$(sublib_name)\"
# DEFAULT_INCLUDES =
INCLUDES = $(strip $(all_includes)) $(DISABLE_DEPRECATED_CFLAGS) $(DISABLE_DEPRECATED_API_CFLAGS)

sublib_includedir = $(includedir)/$(sublib_libname)/$(sublib_name)
sublib_include_HEADERS = $(generated_sources_h) $(files_extra_h)

# # # #
# commented for now, because hack needs to be used
MOSTLYCLEANFILES = $(generated_sources_cc) $(generated_sources_h) $(generated_private_headers)
# end of "commented for now"
# # # #
