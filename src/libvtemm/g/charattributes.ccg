/* charattributes.cc
 *
 * Copyright (C) 2008 libvtemm Development Team
 *
 * This file is part of libvtemm.
 *
 * libvtemm is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * libvtemm is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser Public License for more details.
 *
 * You should have received a copy of the GNU Lesser Public License
 * along with libvtemm.  If not, see <http://www.gnu.org/licenses/>.
 */

namespace Gnome
{

namespace Vte
{

CharAttributes::CharAttributes()
: gobject_(0)
{
}

CharAttributes::CharAttributes(const CharAttributes& src)
{
	if (!src.gobject_)
	{
		gobject_ = 0;
	}
	else
	{
		/*
		gobject_ = new VteCharAttributes;
		gobject_->row = src.gobject_->row;
		gobject_->column = src.gobject_->column;
		gobject_->fore = src.gobject_->fore;
		gobject_->back = src.gobject_->back;
		gobject_->underline = src.gobject_->underline;
		gobject_->strikethrough = src.gobject_->strikethrough;
		*/
		gobject_ = new VteCharAttributes(*(src.gobj()));
	}
}

CharAttributes::CharAttributes(VteCharAttributes* castitem, bool take_copy)
{
	if (take_copy)
	{
		/*
		gobject_ = new VteCharAttributes;
		gobject_->row = castitem->row;
		gobject_->column = castitem->column;
		gobject_->fore = castitem->fore;
		gobject_->back = castitem->back;
		gobject_->underline = castitem->underline;
		gobject_->strikethrough = castitem->strikethrough;
		*/
		gobject_ = new VteCharAttributes(*castitem);
	}
	else
	{
		gobject_ = castitem;
	}
}

CharAttributes::~CharAttributes()
{
	if (gobject_)
	{
		delete gobject_;
		gobject_ = 0;
	}
}

CharAttributes& CharAttributes::operator=(const CharAttributes& src)
{
	if (&src == this)
	{
		return *this;
	}
	else
	{
		if (gobject_)
		{
			delete gobject_;
			gobject_ = 0;
		}
		gobject_ = new VteCharAttributes(*(src.gobj()));
	}
}

} // namespace Vte

} // namespace Gnome

namespace Glib
{

Gnome::Vte::CharAttributes wrap(VteCharAttributes* object, bool take_copy)
{
	return Gnome::Vte::CharAttributes(object, take_copy);
}

} // namespace Glib
